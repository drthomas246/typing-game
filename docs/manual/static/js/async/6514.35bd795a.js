"use strict";(self.webpackChunktyping_game=self.webpackChunktyping_game||[]).push([["6514"],{1787:function(n,r,e){e.r(r),e.d(r,{default:()=>a});var s=e(5893),t=e(4334);function i(n){let r=Object.assign({pre:"pre",code:"code"},(0,t.ah)(),n.components);return(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"typing-game/\r\n├── .ladle/                          # Ladle コンポーネント開発ツール設定ディレクトリ\r\n│\r\n├── docs/                            # 公開用ビルド出力先（GitHub Pages）\r\n│   ├── assets/                      # アセットファイル\r\n│   ├── images/                      # 画像ファイル\r\n│   │   ├── background/              # backgroundイメージフォルダ\r\n│   │   ├── icon/                    # ファビコンフォルダ\r\n│   │   ├── map/                     # 地図イメージフォルダ\r\n│   │   ├── monster/                 # モンスターイメージフォルダ\r\n│   │   ├── title/                   # タイトルイメージフォルダ\r\n│   │   ├── [Problem Image Folder]/  # 問題画像フォルダ\r\n│   │   ├── :                        #\r\n│   │   └── :                        #\r\n│   ├── manual/                      # Rspress 出力（マニュアル）\r\n│   │   ├── api/                     # API ドキュメント\r\n│   │   ├── components/              # コンポーネントフォルダ\r\n│   │   ├── cov/                     # カバレッジルートドキュメント出力フォルダ\r\n│   │   ├── coverage/                # カバレッジドキュメント本体フォルダ\r\n│   │   ├── ladle/                   # コンポーネント開発ツールルートドキュメント\r\n│   │   ├── LadleStorys/             # コンポーネント開発ツールドキュメント本体フォルダ\r\n│   │   ├── Overview                 # ReadMeドキュメント\r\n│   │   └── static/                  # 静的ファイルフォルダ\r\n│   └── music/                       # 音楽ファイル\r\n│   │   ├── bgm/                     # バックミュージックフォルダ\r\n│   │   └── soundEffects/            # サウントエフェクトフォルダ\r\n├── public/                          # パブリックフォルダ\r\n│   ├── images/                      # 画像ファイル\r\n│   │   ├── background/              # backgroundイメージフォルダ\r\n│   │   ├── icon/                    # ファビコンフォルダ\r\n│   │   ├── map/                     # 地図イメージフォルダ\r\n│   │   ├── monster/                 # モンスターイメージフォルダ\r\n│   │   ├── title/                   # タイトルイメージフォルダ\r\n│   │   ├── [Problem Image Folder]/  # 問題画像フォルダ\r\n│   │   ├── :                        #\r\n│   │   └── :                        #\r\n│   ├── music/                       # 音楽ファイル\r\n│   │   ├── bgm/                     # バックミュージックフォルダ\r\n│   │   └── soundEffects/            # サウントエフェクトフォルダ\r\n│   └── readme/                      # ReadMeドキュメント使用イメージフォルダ\r\n│\r\n├── site/                            # Rspress ドキュメントルート\r\n│   ├── api/                         # API ドキュメント\r\n│   ├── components/                  # コンポーネント\r\n│   ├── cov/                         # カバレッジルートドキュメント\r\n│   ├── ladle/                       # コンポーネント開発ツールルートドキュメント\r\n│   ├── Overview/                    # ReadMeドキュメント\r\n│   └── styles/                      # スタイルシートドキュメント\r\n│\r\n├── src/                             # ソースコードルート\r\n│   ├── components/                  # コンポーネント\r\n│   │   ├── map/                     # マップ描画UI\r\n│   │   ├── typing/                  # タイピング関連UI\r\n│   │   │   ├── HeaderArea/          # ヘッダー領域コンポーネント\r\n│   │   │   ├── BattleArea/          # バトル領域コンポーネント\r\n│   │   │   ├── AnswerArea/          # 回答領域コンポーネント\r\n│   │   │   ├── ResultsDialog/       # 結果ダイアログコンポーネント\r\n│   │   │   └── SettingsDrawer/      # 設定ドローワコンポーネント\r\n│   │   ├── ui/                      # Chakra UI デフォルトコンポーネント\r\n│   │   └── visuals/                 # HPバー等表示コンポーネント\r\n│   ├── contexts/                    # React Contexts 設定\r\n│   ├── data/                        # ゲームデータ（単語リスト、敵データなど）\r\n│   │   └── texts/                   # 問題設定ファイル収納フォルダ\r\n│   ├── db/                          # Dexie.js用設定\r\n│   ├── hooks/                       # 自作カスタムフック\r\n│   │   ├── typingEngine/            # タイピングエンジンフック\r\n│   │   └── typingPage/              # タイピングページフック\r\n│   ├── lib/                         # 汎用ユーティリティ\r\n│   ├── Pages/                       # ページコンポーネント\r\n│   ├── repositories/                # Dexie.js使用関数保存フォルダ\r\n│   ├── stories/                     # Ladle コンポーネント開発ツール\r\n│   │   └── components/              # UIコンポーネントのデモ\r\n│   │       └── typing/              # タイピングゲームのUIコンポーネントのデモ\r\n│   ├── types/                       # 型定義ファイル\r\n│   ├── App.tsx                      # 全体構成ファイル\r\n│   └── main.tsx                     # アプリエントリポイントファイル\r\n│\r\n├── tests/                           # テストコード\r\n│   ├── __mocks__/                   # モックデータやモック関数を定義\r\n│   ├── custom/                      # カスタムcss\r\n│   ├── hooks/                       # カスタムフックのテストスクリプト\r\n│   │   ├── typingEngine/            # タイピングエンジンフックテストスクリプト\r\n│   │   └── typingPage/              # タイピングページフックテストスクリプト\r\n│   ├── lib/                         # テスト用ライブラリ\r\n│   ├── setup/                       # テスト用セットアップ\r\n│   ├── ui/                          # テスト用UIコンポーネントのデモ\r\n│   │   ├── ResultsDialog/           # テスト用ResultsDialogコンポーネントのデモ\r\n│   │   └── SettingsDrawer/          # テスト用SettingsDrawerコンポーネントのデモ\r\n│   └── utils/                       # Providersの設定\r\n│\r\n├── biome.json                       # Biome用 Linter / Formatter 設定\r\n├── index.html                       # index.html\r\n├── package.json                     # npmスクリプト・依存関係\r\n├── rspress.config.ts                # Rspress ドキュメント設定\r\n├── README.md                        # プロジェクト概要\r\n├── LICENSE.md                       # ライセンス文書\r\n├── LICENSE.EN.md                    # ライセンス文書 (English)\r\n├── tsconfig.json                    # 全体用 TypeScript 設定\r\n├── tsconfig.app.json                # アプリ用 TypeScript 設定\r\n├── tsconfig.node.json               # node用 TypeScript 設定\r\n├── tsconfig.site.json               # Rspress 用 TypeScript 設定\r\n├── tsconfig.tests.json              # tests 用 TypeScript 設定\r\n├── typedoc.json                     # typedoc 用設定\r\n├── vite.config.ts                   # Vite 設定\r\n├── vitest.config.ts                 # テスト環境全体の設定ファイル\r\n└── vitest.setup.ts                  # テスト実行前の初期化スクリプト\n"})})}function o(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,t.ah)(),n.components);return r?(0,s.jsx)(r,{...n,children:(0,s.jsx)(i,{...n})}):i(n)}let a=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["overview%2FProjectStructure.md"]={toc:[],title:"\uD83D\uDCC1 ディレクトリ構成",headingTitle:"",frontmatter:{title:"\uD83D\uDCC1 ディレクトリ構成"}}}}]);